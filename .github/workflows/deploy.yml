name: Deploy

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        type: choice
        description: 'Deploy Target'
        options:
          - staging
          - uat
        default: staging
      tag:
        description: 'Tag / Branch / SHA'
        required: true

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  review:
    name: Review info
    runs-on: ubuntu-latest
    steps:
      - name: Target - ${{ github.event.inputs.tag }}
        run: ''

  deploy:
    name: Deploy to ${{ github.event.inputs.deploy_target }} by @${{ github.actor }}
    needs: [ review ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies
        uses: actions/cache@v3
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Require Vapor CLI
        run: composer global require laravel/vapor-cli

      - name: Install Project Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Deploy Environment
        run: vapor deploy ${{ github.event.inputs.deploy_target }}
        env:
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
